@value colors: "./colors.css";
@value mGrayBorder, mLightGray, mGray, mDarkGray, mRef, mBlue, mSelected from colors;

.sidebar {
    border: 1px solid mGrayBorder;
    width: 250px;
    height: 100vh;
    /* margin: auto; */
    display: flex;
    flex-direction: column;
    background-color: mLightGray;
}
.hide, .item, .exit {
    display: flex;
}
.hide, .item {
    border-bottom: 1px solid mLightGray;    
}
.exit {
    border-top: 1px solid mGrayBorder;
}
.button {
    flex-basis: 40px;
    text-align: center;
    background-color: mDarkGray;
}
.item {
    flex-basis: 55px;    
}
.empty {
    flex-basis: auto;
    height: 100vh;    
}
.sidebar a {
    text-decoration: none;
    color: mRef;
}
.item a, .button a {
    display: inline-block;
    width: 100%;
}
.item a {
    padding: 8px 10px;    
}
.item a:hover, .button a:hover, .hideSidebar > .userSection a:hover  {
    background-color: mGray;
}
.active, .active a:hover {
    background-color: mSelected;
}
.active a:hover, .active a {
    color: white;
}
.transform { 
    transition-property: all;
    transition-duration: 0.2s;
    transition-delay: 0.1s;
}
.hideSidebar {
    width: 50px;
}
.hideSidebar > div > a {
    display: inline-block;
    width: 100%;
}
.hideSidebar > div > a {
    display: block;
}
.hideSidebar > div > a span {
    opacity: 0;
    overflow: hidden;
    display: inline-block;
    height: 0;
}
.hideSidebar > div[data-descr]:hover::after {
    content: attr(data-descr);
    position: relative;
    left: 10px;
    top: 0;
    min-width: 100px;
    border: 1px #aaaaaa solid;
    border-radius: 10px;
    background-color: mSelected;
    padding: 12px;
    color: white;
    font-size: 14px;
    z-index: 1;
}
.transform a span {
    opacity: 1;
}
.sidebar i {
    font-size: 1.5em;    
}
.sidebar span {
    position: relative;
    top: -5px;
    padding-left: 5px;
}
.hideRef:hover, .exitRef:hover {
    font-size: 1.1em;
}